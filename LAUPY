import hmac
import hashlib

def hmac_sha256(message, key):
    """
    Generate HMAC-SHA256 signature for the given message and key.

    :param message: The message to be hashed.
    :param key: The key to use for hashing.
    :return: HMAC-SHA256 signature as a hexadecimal string.
    """
    try:
        # Create a new hmac object using the key and message
        hmac_obj = hmac.new(key.encode(), message.encode(), hashlib.sha256)
        # Return the hexadecimal representation of the HMAC
        return hmac_obj.hexdigest().upper()
    except Exception as e:
        raise RuntimeError(f"Error generating HMAC: {e}")

# Your SWIFT message
message = "{1:F01PTSQGBB0XAAA0183000001}{2:I199PTSQGBB0XJJJU3}{3:{108:swiftuser3}}{4: :20: :79:SAA AKURA JJJ Branch Filesystem look in incoming messages -}"
key = "Abcdef0123456789Abcdef0123456789"

# Generate the LAU
lau = hmac_sha256(message, key)
print(f'Generated HMAC-SHA256: {lau}')

# Format the full message with the LAU
full_message = f"{message}\n{{S:{{MDG:{lau}}}}}"

# Save the formatted message to a file in Downloads directory
file_path = r'C:\Users\user\Downloads\MTLAU.txt'
with open(file_path, 'w', encoding='utf-8') as file:
    file.write(full_message)

print(f'Formatted message with LAU has been saved to {file_path}')
